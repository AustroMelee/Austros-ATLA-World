// .cursorcontext (v2.1, SOLO, AI-FIRST, STRICT)

/*--------------------------------------------------
  CORE: PROJECT & WORKFLOW
---------------------------------------------------*/
PROJECT_TYPE: Solo + AI, TypeScript / React, **direct-to-main only (no PRs, no branches).**
PRIORITY: Velocity > Process > Tests (tests optional).
AGENTS: Cursor, O3, Gemini 2.5.
ENV: Local dev with hot reload.
ALL errors fixed immediately by AI or revert; never wait for human triage.

/*--------------------------------------------------
  MANDATORY AUTOMATION & PRE-COMMIT GATES
---------------------------------------------------*/
- On any file/type/export change run: `npm run docs:refresh`.
- `ALL_FILES_INDEX.md` & `SYSTEM ARCHITECTURE.MD` must exactly match codebase (auto-generated, UTC-stamped, git SHA included). Manual edits forbidden.
- Pre-commit must pass:
  • `npm run lint:fix`  
  • `tsc --noEmit`
- Drift in docs, lint, or types **blocks commit**.
- No test-coverage thresholds, no container / integration CI gating.
- Dev-server may only run when user explicitly asks.

/*--------------------------------------------------
  TYPE / COMPONENT RULES
---------------------------------------------------*/
- All React code in `.tsx`; tsconfig strict, no `any/unknown` except with `@ts-expect-error <reason>`.
- Functional components + hooks only; no classes.
- PascalCase components, camelCase hooks, kebab-case files.
- Fully type props, state, refs, events; colocate component types in `types.ts`, share global types in `/src/types`.
- No magic values — use enums/consts.
- API boundaries strongly typed + runtime-validated (Zod preferred); disallow untyped third-party responses.
- All exported/public items require JSDoc (auto-doc enforced).

/*--------------------------------------------------
  ORGANIZATION & SRP
---------------------------------------------------*/
- ≤ 500 LOC per file, single responsibility, filename reflects role.
- Structure:  
  `/features/<domain>/…` – feature code  
  `/common/…` – shared hooks/components/utils  
  `/tests/…` – optional tests
- No circular imports; run `madge` + `dependency-cruiser` pre-commit & CI.
- Services must use lazy/factory pattern; no eager singletons in module scope.

/*--------------------------------------------------
  QUALITY, ERRORS, ACCESSIBILITY, PERFORMANCE
---------------------------------------------------*/
- Zero lint/type warnings on commit; unused imports removed immediately.
- Root UI wrapped in `ErrorBoundary` + `Suspense` with fallback.
- All UI passes a11y lint; interactive elements require ARIA labels.
- `React.memo`, `useMemo`, `useCallback` only when perf-profiled.
- No empty `catch`; errors must be contextual + actionable.

/*--------------------------------------------------
  IMPORT / EXPORT HYGIENE
---------------------------------------------------*/
- Explicit imports; wildcards allowed only for types.
- Import order: React → external libs → internal code → types.
- Validate all paths and exports; remove dead code on sight.

/*--------------------------------------------------
  INTEGRATION & TYPE-SAFETY PROTOCOLS
---------------------------------------------------*/
- Before & after major edits: verify function signatures, imports/exports, and type compatibility.
- Orphaned, inconsistent, or unused code forbidden.
- Lazy/factory services only; never instantiate logic at import time.

/*--------------------------------------------------
  DOCS ENFORCEMENT
---------------------------------------------------*/
- `SYSTEM ARCHITECTURE.MD`, `ALL_FILES_INDEX.md`, and derivative docs regenerate with every change.
- Pre-commit/CI fails if generated docs drift or if any new file/export lacks docblocks.

/*--------------------------------------------------
  DEPENDENCY & BUNDLE HYGIENE
---------------------------------------------------*/
- CI fails on unused/out-of-date npm packages (depcheck / npm outdated).
- Bundle analysis (e.g., `vite-plugin-inspect`) after major changes to curb size and splits.

/*--------------------------------------------------
  i18n, LOGGING, PROFILING
---------------------------------------------------*/
- Externalise all user-facing strings for i18n readiness.
- Integrate production error monitoring (e.g., Sentry).
- Profile React renders after significant UI/state changes.

/*--------------------------------------------------
  AGENT DIRECTIVE
---------------------------------------------------*/
- AGENTS must read `.cursorcontext` before acting and obey **main-branch-only** constraint.
- Never suggest test-coverage targets, branching, PRs, or merge gates.
- All AI edits are immediate, local, explainable, and committed straight to `main`.

