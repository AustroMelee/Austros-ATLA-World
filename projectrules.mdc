# PROJECT_RULES_AND_WORKFLOW_POLICY  (v3.1 – “Source-Hardened”)

────────────────────────────────────────────────────────
[CONTEXT]
────────────────────────────────────────────────────────
PROJECT_TYPE: Fan / Personal, SOLO_DEVELOPER_MODE (single contributor)  
PRIORITY: VELOCITY > PROCESS > TEST_COVERAGE (tests optional)  
TOOLCHAIN: Cursor (primary), O3, Gemini Pro 2.5 (support)  
ENVIRONMENT: Local dev server, **direct-to-main only** (no branches / PRs)  
STAKEHOLDER_IMPACT: None – risk is local and self-corrected  

────────────────────────────────────────────────────────
[MANDATORY AUTOMATION & DRIFT CONTROL]
────────────────────────────────────────────────────────
• **Pre-commit (Husky)** runs  
  `npm run docs:refresh && npm run lint:fix && npx tsc --noEmit`  
  → aborts on any non-zero exit, auto-stages generated docs.  
• CI fails if:  
  – `git diff --exit-code docs-generated/` is non-empty  
  – `depcheck` finds unused deps  
  – `madge --circular src/` finds cycles  
• Manual edits to generated docs (`ALL_FILES_INDEX.md`, `SYSTEM ARCHITECTURE.MD`, etc.) are forbidden.  
• All automation scripts are versioned + documented in `SYSTEM ARCHITECTURE.MD`.  
• Auto-generated docs include UTC timestamp + git SHA.  
• **Fail-on-drift**: any doc/code divergence is Fatal (blocks commit).  

────────────────────────────────────────────────────────
[COMMIT RULES]
────────────────────────────────────────────────────────
• Message pattern: `fix|feat|chore(scope): summary` (≤50 chars) – SHA + UTC auto-appended.  
• Cursor must split commits so each changes **≤500 LOC**.  

────────────────────────────────────────────────────────
[MAIN-BRANCH DISCIPLINE]
────────────────────────────────────────────────────────
• Cursor pulls + rebases before write; if remote changed → abort, restitch diff, retry.  
• **Readonly-main safeguard** prevents accidental overwrite.  

────────────────────────────────────────────────────────
[ERROR CLASSIFICATION]
────────────────────────────────────────────────────────
• **Fatal**  = type error, lint error, doc drift, circular import, **Chat-Protocol violation** → blocks commit / forces reply redo.  
• **Recoverable** = runtime exception in local dev → auto-fix or log under `window.__DEV_LOG__`; commit after local pass.  

────────────────────────────────────────────────────────
[MISC FAST-LANE GUARDS]
────────────────────────────────────────────────────────
• Dev script autokills ports **5173-5190** (`npx kill-port`).  
• No `// TODO:` – use `// FIXME:` + context or delete.  
• Asset gate: warn >250 kB single file; advise CDN / split.  
• Global `window.__DEV_LOG__` toggle for lightweight prod tracing.  

────────────────────────────────────────────────────────
[SOLO DEV WORKFLOW]
────────────────────────────────────────────────────────
1. Edit on **main**; run local dev server.  
2. On error → send to AI, apply fix or revert, retest.  
3. On pass (lint + docs) → commit (hooks auto-run) → push main.  

────────────────────────────────────────────────────────
[AGENT / LLM DIRECTIVE]
────────────────────────────────────────────────────────
• Never propose tests, branches, PRs, or coverage gates.  
• Focus on main-branch edits, local fixes, agentic recovery.  
• Always read latest `.cursorcontext` + generated docs before any action.  

────────────────────────────────────────────────────────
[CHAT INTERACTION PROTOCOL]
────────────────────────────────────────────────────────
A. **USER FLAGS** (first non-blank char)  
   ? = question  ! = action  # = docs/arch chat  $ = shell/git help  > = quick nudge  

B. **CURSOR RESPONSE FORMAT**  
   1. `[ACK]`  one-liner confirming task / answer scope  
   2. `[PLAN]` ≤5 bullets (omit only for trivial Q&A)  
   3. `[OUTCOME]` code / diff / answer body  
   4. `[NEXT]` exactly one clarifier or “Done.”  

C. **COMPLIANCE RULES**  
   • Max one clarifying question per cycle.  
   • Zero apologies / filler; stick to the four blocks.  
   • Prefix emitted code with `// CONTEXT: <file|topic>`.  
   • User may send `# refresh` to force Cursor to re-read docs before next action.  

────────────────────────────────────────────────────────
[RESPONSE VALIDATION & SELF-CHECK]   ← ***NEW HARD GUARD***
────────────────────────────────────────────────────────
Before emitting a reply, Cursor **must** run an internal checklist:  
1. Does response contain `[ACK]`, `[OUTCOME]`, `[NEXT]`? (`[PLAN]` if non-trivial)  
2. Does it violate “no apologies / fluff” rule?  
3. Is block order correct?  
4. Is length ≤200 lines or ≤1200 words?  
If any check fails → abort, reformat, then send. A failure to self-correct is **Fatal**.  

────────────────────────────────────────────────────────
[NO-BS UPGRADE CHECKLIST]  (implicitly enforced)
────────────────────────────────────────────────────────
1. Docs+lint auto-run, no prompts.  
2. Hard drift gate in CI.  
3. Commit-message contract.  
4. 500-LOC diff cap.  
5. Read-only main rebase guard.  
6. Fatal vs Recoverable error tiering.  
7. Zero TODOs allowed.  
8. Port autokill.  
9. Static asset cap 250 kB.  
10. `window.__DEV_LOG__` runtime toggle.  

Agent Confirmation Policy

Definition (Minor Change):
Any change classified as a lint fix, code style update, or strictly non-functional/auto-fixable error (e.g. whitespace, formatting, unused imports, semicolons, or naming conventions) is considered non-critical.

Policy:
For all non-critical code changes:

DO NOT prompt the user to “review changes”, “accept”, or “proceed” before applying.

DO NOT batch minor changes into confirmation queues for user review.

ALWAYS proceed automatically with all requested batch edits, unless a change would alter functionality, logic, or public interfaces.

If in doubt, auto-apply unless the change would affect runtime behavior or public API contracts.

NEVER require explicit confirmation for basic lint or formatting corrections.

Critical Change Escalation:
Only prompt for user review if a proposed edit meets at least one of the following:

Alters runtime logic, control flow, or data structures.

Changes public interface (types, function signatures, exports).

Performs destructive or irreversible action (file deletion, migration).

Justification:
User bandwidth is reserved for meaningful review—all agentic auto-fixes for code health, lint, and formatting must proceed automatically and without ticky-tack confirmations.
All Cursor and LLM agents must treat “batch edit minor flagged files” as default action, not a review opportunity.

---

## Branding & Hygiene Edits

- For all future branding/hygiene tasks, do not require user confirmation or “review changes” prompts for pure-lint/type/branding edits unless an edit would impact logic or cause a test failure unrelated to the branded type system.

# END_POLICY
